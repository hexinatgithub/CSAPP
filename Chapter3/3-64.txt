//CSAPP 3.64
这道题要跟着汇编代码把栈的内存形式还原出来，就可以解决了
===============diff stack frame======================
%ebp	0		
		-4		s2.prod
		-8		s2.sum
		-12		s1.v
		-16		s1.p
		-20		&s2
%esp	-24		return address
==============word_sum stack fram====================
%ebp	0		saved %ebp
%esp	-4		%ebx

A:		8(%ebp)		&s2
		16(%ebp)	v
		12(%ebp)	p

B：和注释一样，使用到了五个内存，只有前4bytes不使用,即offset=0的内存段没有使用

C：传递结构体和传递参数是一个原理，都是把要传递的值放在调用者的stack frame，the callee则是使用相对于%ebp的offset值来进行访问

D：这问挺有意思的，如果将一个函数的返回值赋值给结构体，则compiler进行的优化是将被赋值结构体的指针当做参数赋值给被调用函数，被调用函数在执行的过程中直接修改被赋值的结构体空间的值。
只有就少了多余的内存移动，赋值，减少了不必要的instruction